knitr::opts_chunk$set(echo = TRUE)
library(sf)
library(mapview)
berths <- rst_read('X:/Projects/PLA/GIS/Shapefiles/Berths.shp/')
berths <- st_read('X:/Projects/PLA/GIS/Shapefiles/Berths.shp/')
berths <- st_read('X:/Projects/PLA/GIS/Shapefiles/Berths.shp')
river  <- st_read('X:/Projects/PLA/GIS/Shapefiles/River Thames Outline.shp')
map <- leaflet() %>%
addProviderTiles("OpenStreetMap") %>%
addFeatures(berths) >%>
map <- leaflet() %>%
addProviderTiles("OpenStreetMap") %>%
addFeatures(berths) %>%
addFeatures(river)
library(leaflet)
map <- leaflet() %>%
addProviderTiles("OpenStreetMap") %>%
addFeatures(berths) %>%
addFeatures(river)
library(openair)
head(importKCL(site = 'MY1', year = 2018, units = 'volume'))
temp <- head(importKCL(site = 'MY1', year = 2018, units = 'volume'))
temp
temp$date
berths
knitr::opts_chunk$set(echo = TRUE)
library(sf)
library(mapview)
library(leaflet)
berths <- st_read('X:/Projects/PLA/GIS/Shapefiles/Berths.shp') %>% st_crs(27700)
river  <- st_read('X:/Projects/PLA/GIS/Shapefiles/River Thames Outline.shp') %>% st_crs(27700)
map <- leaflet() %>%
addProviderTiles("OpenStreetMap") %>%
addFeatures(berths) %>%
addFeatures(river)
berths <- st_read('X:/Projects/PLA/GIS/Shapefiles/Berths.shp') %>% st_set_crs(27700)
river  <- st_read('X:/Projects/PLA/GIS/Shapefiles/River Thames Outline.shp') %>% st_set_crs(27700)
map <- leaflet() %>%
addProviderTiles("OpenStreetMap") %>%
addFeatures(berths) %>%
addFeatures(river)
berths <- st_read('X:/Projects/PLA/GIS/Shapefiles/Berths.shp') %>% st_set_crs(27700) %>% st_transform(4326)
river  <- st_read('X:/Projects/PLA/GIS/Shapefiles/River Thames Outline.shp') %>% st_set_crs(27700) %>% st_transform(4326)
map <- leaflet() %>%
addProviderTiles("OpenStreetMap") %>%
addFeatures(berths) %>%
addFeatures(river)
map
mapview(berths)
berths
map
berths <- st_read('X:/Projects/PLA/GIS/Shapefiles/Berths.shp') %>% st_set_crs(27700) %>% st_transform(4326)
river  <- st_read('X:/Projects/PLA/GIS/Shapefiles/River Thames Outline.shp') %>% st_set_crs(27700) %>% st_transform(4326)
map <- leaflet() %>%
addProviderTiles("OpenStreetMap") %>%
addMarkers(river) %>%
addFeatures(berths)
berths
berths[1:180,]
berths$geometry
berths$geometry[1:50]
plot(berths)
plot(st_geometry(berths))
mapview(berths)
berths[179]
berths[179,]
berths <- st_read('X:/Projects/PLA/GIS/Shapefiles/Berths.shp')
berths[179,]
berths[179,]$geometry
berths[-179,]
berths <- st_read('X:/Projects/PLA/GIS/Shapefiles/Berths.shp') %>% berths[-179,] %>% st_set_crs(27700) %>% st_transform(4326)
river  <- st_read('X:/Projects/PLA/GIS/Shapefiles/River Thames Outline.shp') %>% st_set_crs(27700) %>% st_transform(4326)
river  <- st_read('X:/Projects/PLA/GIS/Shapefiles/River Thames Outline.shp') %>% st_set_crs(27700) %>% st_transform(4326)
knitr::opts_chunk$set(echo = TRUE)
library(sf)
library(mapview)
library(leaflet)
berths <- st_read('X:/Projects/PLA/GIS/Shapefiles/Berths.shp') %>% st_set_crs(27700) %>% st_transform(4326)
berths <- berths[-179,]
river  <- st_read('X:/Projects/PLA/GIS/Shapefiles/River Thames Outline.shp') %>% st_set_crs(27700) %>% st_transform(4326)
map <- leaflet() %>%
addProviderTiles("OpenStreetMap") %>%
add(river) %>%
addFeatures(berths)
map <- leaflet() %>%
addProviderTiles("OpenStreetMap") %>%
addFeatures(river) %>%
addFeatures(berths)
map
head(berths)
map <- leaflet() %>%
addProviderTiles("OpenStreetMap") %>%
addFeatures(river) %>%
addFeatures(berths) %>%
addStaticLabels(berths,
label = berths$berth_name,
labelOptions = lopt)
map <- leaflet() %>%
addProviderTiles("OpenStreetMap") %>%
addFeatures(river) %>%
addFeatures(berths) %>%
addStaticLabels(berths,
label = berths$berth_name)
map
mapview(berths, map.types = c("OpenStreetMap.BlackAndWhite")) %>% addFeatures(river)
knitr::opts_chunk$set(echo = TRUE)
library(sf)
library(mapview)
library(leaflet)
library(tidyverse)
emissions <- read_csv('emissions/inventory_export_2016.csv')
head(emissions)
grid      <- st_read('grids/LAEIGridExtensionV2.gpkg')
plot(grid)
plot(st_geometry(grid))
head(grid)
head(emissions)
grid_emissions  <- emrge(grid, emissions, by.x = 'GRID_ID0', by.y = 'CellID', all.x=T)
grid_emissions  <- merge(grid, emissions, by.x = 'GRID_ID0', by.y = 'CellID', all.x=T)
head(grid_emissions)
head(emissions)
mapview(grid)
emissions[emissions$CellID == 857,]
grid_emissions[gridemissions$CellID == 857,]
grid_emissions[grid_emissions$CellID == 857,]
emissions[emissions$CellID == 857,]
emissions[emissions$CellID == 857,]$Year
emissions[emissions$CellID == 857,]$Substance
aggregate(data=emissions, Total_kg ~ Substance + CellID, FUN=sum)
emissions       <- aggregate(data=emissions, Total_kg ~ Substance + CellID, FUN=sum)
head(emissions)
grid_emissions  <- merge(emissions, grid, by.y = 'GRID_ID0', by.x = 'CellID', all.x=T)
head(grid)
head(emissions)
grid_emissions  <- merge(emissions, grid, by.x = 'CellID', by.y = 'GRID_ID0')
names(emissions)
names(grid)
grid_emissions  <- merge(grid, emissions, by.x = 'GRID_ID0', by.y = 'CellID', all.x=T)
head(grid_emissions)
class(emissions$CellID)
class(grid$GRID_ID0)
emissions$CellID  <- emissions$CellID
head(emissions)
emissions$CellID  <- as.numeric(emissions$CellID)
grid_emissions   <- merge(emissions, grid, by.x = 'CellID', by.y = 'GRID_ID0', all.x=T)
grid_emissions    <- merge(emissions, grid, by.x = 'CellID', by.y = 'GRID_ID0')
grid_emissions    <- merge(emissions, grid, by.x = 'CellID', by.y = 'GRID_ID0', all=T)
head(emissions)
grid[grid$GRID_ID0 == 231,]
grid[grid$GRID_ID == 231,]
grid_emissions    <- merge(emissions, grid, by.x = 'CellID', by.y = 'GRID_ID')
head(grid_emissions)
mapview(grid_emissions[grid_emissions$Substance == 'NO2',])
class(grid_emissions)
st_geometry(grid_emissions) <- grid_emissions$geom
class(grid_emissions)
mapview(grid_emissions[grid_emissions$Substance == 'NO2',])
mapview(grid_emissions[grid_emissions$Substance == 'CO',])
unique(grid_emissions$Substance)
mapview(grid_emissions[grid_emissions$Substance == 'NOx',])
mapview(grid_emissions[grid_emissions$Substance == 'NOx',], map.types = c("OpenStreetMap.BlackAndWhite"), color = grid_emissions$Total_kg)
grid_emissions$Total_kg
as.numeric(grid_emissions$Total_kg)
mapview(grid_emissions[grid_emissions$Substance == 'NOx',], map.types = c("OpenStreetMap.BlackAndWhite"), color = as.numeric(grid_emissions$Total_kg))
summary(as.numeric(grid_emissions$Total_kg))
head(emissions)
emissions                   <- read_csv('emissions/inventory_export_2016.csv')
head(emissions)
mapview(grid_emissions[grid_emissions$Substance == 'NOx',], map.types = c("OpenStreetMap.BlackAndWhite"), zcol = as.numeric(grid_emissions$Total_kg))
mapview(grid_emissions[grid_emissions$Substance == 'NOx',], map.types = c("OpenStreetMap.BlackAndWhite"), zcol = 'Total_kg')
NOX <- grid_emissions[grid_emissions$Substance == 'NOx',]
mapview(NOX, map.types = c("OpenStreetMap.BlackAndWhite"), zcol = 'Total_kg')
mapview(NOX, map.types = c("OpenStreetMap.BlackAndWhite"), zcol = 'Total_kg', at = c(0,10,20))
quantile(NOX, 1)
quantile(NOX, 1, na.rm=T)
quantile(NOX$Total_kg, probs = seq(0, 1, 0.25), na.rm = TRUE)
quantile(NOX$Total_kg, probs = seq(0, 1, 0.1), na.rm = TRUE)
mapview(NOX, map.types = c("OpenStreetMap.BlackAndWhite"), zcol = 'Total_kg', at = quantile(NOX$Total_kg, probs = seq(0, 1, 0.1), na.rm = TRUE))
round(quantile(NOX$Total_kg, probs = seq(0, 1, 0.1), na.rm = TRUE),0)
round(quantile(NOX$Total_kg, probs = seq(0, 1, 0.1), na.rm = TRUE),2)
mapview(NOX, map.types = c("OpenStreetMap.BlackAndWhite"), zcol = 'Total_kg', at = round(quantile(NOX$Total_kg, probs = seq(0, 1, 0.1), na.rm = TRUE),2))
head(grid_emissions)
emissions                   <- read_csv('emissions/inventory_export_2016.csv')
head(emissions)
unique(emissions$BOROUGHNAM)
emissions                   <- read_csv('emissions/inventory_export_2016.csv')
emissions                   <- aggregate(data=emissions, cbind(Sailing_kg, AtBert_kg) ~ Substance + CellID, FUN=sum)
emissions                   <- aggregate(data=emissions, cbind(Sailing_kg, AtBerth_kg) ~ Substance + CellID, FUN=sum)
emissions$CellID            <- as.numeric(emissions$CellID)
grid                        <- st_read('grids/LAEIGridExtensionV2.gpkg')
head(emissions)
grid_emissions              <- merge(emissions, grid, by.x = 'CellID', by.y = 'GRID_ID')
st_geometry(grid_emissions) <- grid_emissions$geom
head(grid_emissions)
NOX <- grid_emissions[grid_emissions$Substance == 'NOx',]
NOX <- grid_emissions[grid_emissions$Substance == 'NOx',]
mapview(NOX, map.types = c("OpenStreetMap.BlackAndWhite"), zcol = 'Total_kg', at = round(quantile(NOX$Sailing_kg, probs = seq(0, 1, 0.1), na.rm = TRUE),2))
mapview(NOX, map.types = c("OpenStreetMap.BlackAndWhite"), zcol = 'Sailing_kg', at = round(quantile(NOX$Sailing_kg, probs = seq(0, 1, 0.1), na.rm = TRUE),2))
mapview(NOX, map.types = c("OpenStreetMap.BlackAndWhite"), zcol = 'AtBerth_kg', at = round(quantile(NOX$AtBerth_kg, probs = seq(0, 1, 0.1), na.rm = TRUE),2))
NOX <- grid_emissions[grid_emissions$Substance == 'NOx',]
mapview(NOX, map.types = c("OpenStreetMap.BlackAndWhite"), zcol = 'AtBerth_kg', at = round(quantile(NOX$AtBerth_kg, probs = seq(0, 1, 0.1), na.rm = TRUE),2))
round(quantile(NOX$AtBerth_kg, probs = seq(0, 1, 0.1), na.rm = TRUE),2)
mapview(NOX, map.types = c("OpenStreetMap.BlackAndWhite"), zcol = 'AtBerth_kg', at = round(quantile(NOX$AtBerth_kg, probs = seq(0, 1, 0.1), na.rm = TRUE),3))
mapview(NOX, map.types = c("OpenStreetMap.BlackAndWhite"), zcol = 'AtBerth_kg', at = round(quantile(NOX$AtBerth_kg, probs = seq(0, 1, 0.1), na.rm = TRUE),4))
mapview(NOX, map.types = c("OpenStreetMap.BlackAndWhite"), zcol = 'AtBerth_kg', at = round(quantile(NOX$AtBerth_kg, probs = seq(0, 1, 0.2), na.rm = TRUE),4))
mapview(NOX, map.types = c("OpenStreetMap.BlackAndWhite"), zcol = 'AtBerth_kg', at =
round(quantile(NOX$AtBerth_kg, probs = seq(0, 1, 0.2), na.rm = TRUE),4)
round(quantile(NOX$AtBerth_kg, probs = seq(0, 1, 0.3), na.rm = TRUE),4)
round(quantile(NOX$AtBerth_kg, probs = seq(0, 1, 0.25), na.rm = TRUE),4)
round(quantile(NOX$AtBerth_kg, probs = seq(0, 1, 0.25), na.rm = TRUE),5)
round(quantile(NOX$AtBerth_kg, probs = seq(0, 1, 0.1), na.rm = TRUE),5)
round(quantile(NOX$AtBerth_kg, probs = seq(0, 1, 0.5), na.rm = TRUE),5)
round(quantile(NOX$AtBerth_kg, probs = seq(0, 1, 0.4), na.rm = TRUE),5)
round(quantile(NOX$AtBerth_kg, probs = seq(0, 1, 0.33), na.rm = TRUE),5)
getJenksBreaks(NOX$AtBerth_kg, 5)
install.packages("BAMMtools")
library(BAMMtools)
getJenksBreaks(NOX$AtBerth_kg, 5)
getJenksBreaks(NOX$AtBerth_kg, 5)[1]
getJenksBreaks(NOX$AtBerth_kg, 5)[2]
mapview(NOX, map.types = c("OpenStreetMap.BlackAndWhite"), zcol = 'AtBerth_kg', at =getJenksBreaks(NOX$AtBerth_kg, 5)[1])
mapview(NOX, map.types = c("OpenStreetMap.BlackAndWhite"), zcol = 'AtBerth_kg', at =getJenksBreaks(NOX$AtBerth_kg, 5))
mapview(NOX, map.types = c("OpenStreetMap.BlackAndWhite"), zcol = 'AtBerth_kg', at =getJenksBreaks(NOX$AtBerth_kg, 10))
mapview(NOX, map.types = c("OpenStreetMap.BlackAndWhite"), zcol = 'AtBerth_kg', at = round(getJenksBreaks(NOX$AtBerth_kg, 10),0)
mapview(NOX, map.types = c("OpenStreetMap.BlackAndWhite"), zcol = 'AtBerth_kg', at = round(getJenksBreaks(NOX$AtBerth_kg, 10),0))
mapview(NOX, map.types = c("OpenStreetMap.BlackAndWhite"), zcol = 'Sailing_kg', at = round(getJenksBreaks(NOX$AtBerth_kg, 10),0))
mapview(NOX, map.types = c("OpenStreetMap.BlackAndWhite"), zcol = 'Sailing_kg', at = round(getJenksBreaks(NOX$Sailing_kg, 10),0))
extent(NOX)
st_bbox(NOX)
523000 - 559000
523000 - 55900036000/10
36000/10
187000 - 174000
13000 / 10
st_bbox(grid_emissions)
raster(st_bbox(grid_emissions), res=10)
;ibrary(raster)
library(raster)
raster(st_bbox(grid_emissions), res=10)
st_as_sfc(st_bbox(grid_emissions))
raster(st_as_sfc(st_bbox(grid_emissions)), res=10)
extent(grid_emissions)
raster(extent(grid_emissions), res=10)
latlong = "+init=epsg:4326"
ukgrid = "+init=epsg:27700"
google = "+init=epsg:3857"
raster(extent(grid_emissions), res=10, crs = ukgrid)
new_grid <- raster(extent(grid_emissions), res=10, crs = ukgrid)
mapview(new_grid)
new_grid$layer
new_grid$sailing_points <- NA
new_grid
plot(new_grid)
mapview(new_grid)
mapview(new_grid$sailing_points)
sample(1L10,1)
sample(1:10,1)
new_grid$sailing_points   <- sample(1:10,4550000)
new_grid
1300*3500
1300*3500length(sample(1:10,4550000))
length(sample(1:10,4550000))
new_grid$sailing_points   <- 1:4550000
mapview(new_grid$sailing_points)
knitr::opts_chunk$set(echo = TRUE)
library(sf)
library(mapview)
library(leaflet)
library(tidyverse)
library(BAMMtools)
library(raster)
grid                        <- st_read('grids/LAEIGridExtensionV2.gpkg', quiet = T)
new_grid                  <- raster(extent(grid_emissions), res=10, crs = ukgrid)
new_grid$sailing_points   <- 1:4550000
mapview(new_grid$sailing_points)
mapview(new_grid$sailing_points, map.types = c("OpenStreetMap.BlackAndWhite"))
knitr::opts_chunk$set(echo = TRUE)
library(sf)
library(mapview)
library(leaflet)
library(tidyverse)
library(BAMMtools)
install.packages("BAMMtools")
knitr::opts_chunk$set(echo = TRUE)
library(sf)
library(mapview)
library(leaflet)
library(tidyverse)
library(BAMMtools)
library(raster)
latlong = "+init=epsg:4326"
ukgrid = "+init=epsg:27700"
google = "+init=epsg:3857"
emissions                   <- read_csv('emissions/inventory_export_2016.csv', col_types = cols())
emissions                   <- aggregate(data=emissions, cbind(Sailing_kg, AtBerth_kg) ~ Substance + CellID, FUN=sum)
emissions$CellID            <- as.numeric(emissions$CellID)
grid                        <- st_read('grids/LAEIGridExtensionV2.gpkg', quiet = T)
grid_emissions              <- merge(emissions, grid, by.x = 'CellID', by.y = 'GRID_ID')
st_geometry(grid_emissions) <- grid_emissions$geom
NOX <- grid_emissions[grid_emissions$Substance == 'NOx',]
mapview(NOX, map.types = c("OpenStreetMap.BlackAndWhite"), zcol = 'Sailing_kg', at = round(getJenksBreaks(NOX$Sailing_kg, 10),0))
rm(NOX)
gps_data <- load('gps/apr1_AIS_decoded.Rdata')
head(gps_Data)
head(gps_data)
class(data)
gps_data <- data
rm(data)
head(gps_data)
library(sp)
coordinates(gps_data) <- ~lon+lat
proj4string(gps_data)  <- CRS(latlong)
plot(head(gps_data))
plot(gps_data)
1+1
new_grid
new_grid                  <- raster(extent(grid_emissions), res=10, crs = ukgrid)
new_grid$sailing_points   <- NA
new_grid
gps_data <- spTransform(gps_data, CRS(ukgrid))
gps_data
gps_grid <- rasterize(gps_data, new_grid, fun='count')
plot(gps_grid)
plot(gps_grid$time)
mapview(gps_grid$time)
knitr::opts_chunk$set(echo = TRUE)
library(sf)
library(mapview)
library(leaflet)
library(tidyverse)
library(BAMMtools)
install.packages("BAMMtools")
knitr::opts_chunk$set(echo = TRUE)
library(sf)
library(mapview)
library(leaflet)
library(tidyverse)
library(BAMMtools)
library(raster)
library(sp)
latlong = "+init=epsg:4326"
ukgrid = "+init=epsg:27700"
google = "+init=epsg:3857"
emissions                   <- read_csv('emissions/inventory_export_2016.csv', col_types = cols())
emissions                   <- aggregate(data=emissions, cbind(Sailing_kg, AtBerth_kg) ~ Substance + CellID, FUN=sum)
emissions$CellID            <- as.numeric(emissions$CellID)
grid                        <- st_read('grids/LAEIGridExtensionV2.gpkg', quiet = T)
grid_emissions              <- merge(emissions, grid, by.x = 'CellID', by.y = 'GRID_ID')
st_geometry(grid_emissions) <- grid_emissions$geom
new_grid                  <- raster(extent(grid_emissions), res=10, crs = ukgrid)
new_grid$sailing_points   <- NA
load('gps/apr1_AIS_decoded.Rdata')
gps_data <- data
rm(data)
coordinates(gps_data) <- ~lon+lat
proj4string(gps_data)  <- CRS(latlong)
gps_data <- spTransform(gps_data, CRS(ukgrid))
gps_grid <- rasterize(gps_data, new_grid, fun='count')
plot(gps_grid)
gps_Grid
gps_grid
head(gps_data)
gps_grid <- rasterize(gps_data$time, new_grid, fun='count')
gps_grid <- rasterize(gps_data, new_grid, FUN='count')
gps_grid
gps_grid <- rasterize(gps_data, new_grid, fun='count')
names(gps_grid)
names(gps_grid) <- c('id', 'count')
cellStats(gps_grid, summary)
mapview(gps_grid$count)
gps_grid <- rasterize(gps_data, new_grid, fun=function(x,...)length(x))
gps_grid
names(gps_grid) <- c('id', 'count')
mapview(gps_grid$count)
new_grid
new_grid$sailing_points <- NULL
gps_grid <- rasterize(gps_data, new_grid, 1)
gps_grid
gps_data$time <- 1
gps_grid <- rasterize(gps_data, new_grid, fun=sum)
gps_grid
names(gps_grid) <- c('id', 'count')
gps_grid
mapview(gps_grid$count)
cellStats(gps_grid, summary
)
extent(gps_grid)
extent(grid_emissions)
test <- aggregate(gps_grid, fact = 5, fun=sum)
plot(test)
test
sum(test$count)
cellStats(test, sum
)
gps_data <- gps_data[new_grid,]
gps_data <- crop(gps_data, new_grid]
gps_data <- crop(gps_data, new_grid)
load('gps/apr1_AIS_decoded.Rdata')
gps_data <- data
rm(data)
coordinates(gps_data) <- ~lon+lat
proj4string(gps_data)  <- CRS(latlong)
gps_data <- spTransform(gps_data, CRS(ukgrid))
gps_data <- crop(gps_data, new_grid)
gps_data$time <- 1
gps_grid <- rasterize(gps_data, new_grid, fun=sum)
names(gps_grid) <- c('id', 'count')
gps_grid
cellStats(test, sum
)
hundred_grid <- aggregate(gps_grid, fact = 5, fun=sum)
test <- gps_grid / hundred_grid
overlay(gps_grid, hundred_grid)
overlay(gps_grid, hundred_grid, fun = sum
)
overlay(gps_grid, hundred_grid, fun = function(x/y))
overlay(gps_grid, hundred_grid, fun = function(x,y){x/y}
)
overlay(gps_grid$count, hundred_grid$count, function(x,y){x/y}
)
overlay(gps_grid$count, hundred_grid$count, fun = function(x,y){x/y})
hundred_grid$count
cellStats(hundred_grid$count, sum)
disaggregate(hundred_grid, fact = 5, method = '')
grps_grid
gps_grid
plot(hundred_grid)
mapview(hundred_grid)
hundred_grid
hundred_grid <- aggregate(gps_grid, fact = 10, fun=sum)
plot(hundred_grid)
mapview(hundred_grid)
grid_emissions
mapview(grid_emissions)
